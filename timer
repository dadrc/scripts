#!/usr/bin/zsh

# print seconds in human-readable way
function prettyPrint() {
	# for readability
	local seconds=$1
	# normalize seconds
	local minutes=$(($seconds / 60))
	seconds=$(($seconds % 60))
	# normalize minutes
	local hours=$(($minutes / 60))
	minutes=$(($minutes % 60))
	# pad with zeroes
	echo $hours:${(l:2::0:)${minutes}}:${(l:2::0:)${seconds}}
}

# catch missing parameter
if [[ -z $1 ]]; then
	echo "Usage: ${0##*/} <hours>h<minutes>m<seconds>s [<description>]"
	exit 1
fi

# initialize stuff
hours=0
minutes=0
seconds=0
valid=false
if [[ -n $2 ]] timer=" ${(qq)2}"

# parse timestamp
[[ "$1" =~ "([0-9]+)h" ]] && seconds=$(($match[1] * 3600)) && valid=true
[[ "$1" =~ "([0-9]+)m" ]] && seconds=$(($seconds + $match[1] * 60)) && valid=true
[[ "$1" =~ "([0-9]+)s" ]] && seconds=$(($seconds + $match[1])) && valid=true

# at least one match was successful
if $valid; then
	echo "Starting timer: $(prettyPrint $seconds)."
	# offset 
	seconds=$(($seconds + 1))
	# sleep for given time while printing progress
	while (( seconds-- > 1 )) {
		print -Pn "\r\e[0K$(prettyPrint $seconds) remaining"
		sleep 1
	}
	# see initialization
	print -P "\r\e[0KTimer${timer} finished on $(date +%d.%m.%Y) at $(date +%H:%M:%S)."
	# notify
	notify-send --icon=clock "Timer finished" "$2"
else
	echo "Invalid timestamp, exiting."
	exit 1
fi
exit 0
